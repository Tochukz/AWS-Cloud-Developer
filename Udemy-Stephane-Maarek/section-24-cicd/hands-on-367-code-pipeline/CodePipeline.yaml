AWSTemplateFormatVersion: 2010-09-09

Description: Create a CodePipeline

Parameters:
  ArtifactBucket:
    Type: String
    Description: S3 bucket name for the pipeline artifacts
    Default: chucks-workspace-storage
  GitHubUser:
    Type: String
    Description: GitHub username
    NoEcho: true
    # Note that the GitHub Username is case sensitive
  RepositoryName:
    Type: String
    Description: GitHub repository name
    # Try to maintain the same case for your repo name
  GitHubBranch:
    Description: GitHub branch to trigger deployments
    Type: String
    Default: master
  GitHubConnectionArn:
    Type: String
    Description: GitHub OAuth token with repo access

Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePiplineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowCodeStar
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn
              - Sid: AllowAllForS3
                Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub arn:aws:s3:::elasticbeanstalk-env-resources-${AWS::Region}
                  - !Sub arn:aws:s3:::elasticbeanstalk-env-resources-${AWS::Region}/*
                  - !Sub arn:aws:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId} # Bucket to be created for Elastic Beanstalk service
                  - !Sub arn:aws:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId}/* # Bucket to be created for Elastic Beanstalk service
              - Sid: AllowGeneralOperations
                Effect: Allow
                Action:
                  - cloudformation:*
                  - autoscaling:*
                  - ec2:*
                  - elasticbeanstalk:*
                  - iam:PassRole
                Resource: "*"
              - Sid: AllowBucketAccess
                Effect: Allow
                Action:
                  # - s3:GetObject
                  # - s3:GetObjectVersion
                  # - s3:GetBucketLocation
                  # - s3:PutObjectAcl
                  # - s3:PutObject
                  # - s3:CopyObject
                  # - s3:ListBucket
                  # - s3:GetBucketVersioning
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: SimplePipeline
      PipelineType: V2 # This may be falsely flag by cfn-lint as invalid
      RoleArn: !GetAtt PipelineRole.Arn
      ExecutionMode: QUEUED # QUEUED | SUPERSEDED | PARALLEL # This may be falsely flag by cfn-lint as invalid
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: SimpleSource
          Actions:
            - Name: GtiHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                BranchName: !Ref GitHubBranch
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub ${GitHubUser}/${RepositoryName}
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: DeployToDev
          Actions:
            - Name: BeanstalkDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk # check this
                Version: 1
              Configuration:
                ApplicationName: !ImportValue BeanstalkMultiEnv-ApplicationName
                EnvironmentName: !ImportValue BeanstalkMultiEnv-DevEnvironmentName
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: DeployToProd
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: "Approve to deploy to production"
                # NotificationArn: !Ref ApprovalSNSTopic # optional
              RunOrder: 1
            - Name: BeanstalkDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk # check this
                Version: 1
              Configuration:
                ApplicationName: !ImportValue BeanstalkMultiEnv-ApplicationName
                EnvironmentName: !ImportValue BeanstalkMultiEnv-ProdEnvironmentName
              InputArtifacts:
                - Name: SourceArtifact
              RunOrder: 2
