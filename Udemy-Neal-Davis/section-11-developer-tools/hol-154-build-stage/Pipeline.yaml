AWSTemplateFormatVersion: 2010-09-09

Description: Create a CodePipeline with a Build Stage

Parameters:
  ArtifactBucket:
    Type: String
    Description: S3 bucket to store pipeline artifacts
    Default: chucks-workspace-storage
  GitHubUser:
    Type: String
    Description: GitHub username
    NoEcho: true
    # Note that the GitHub Username is case sensitive
  RepositoryName:
    Type: String
    Description: GitHub repository name
    # Try to maintain the same case for your repo name
  GitHubBranch:
    Description: GitHub branch to trigger deployments
    Type: String
    Default: master
  GitHubConnectionArn:
    Type: String
    Description: GitHub OAuth token with repo access

Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowCodeStar
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn
              - Sid: AllowAllForS3
                Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub arn:aws:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId} # Bucket to be created for Elastic Beanstalk service
                  - !Sub arn:aws:s3:::elasticbeanstalk-${AWS::Region}-${AWS::AccountId}/*
                  - !Sub arn:aws:s3:::elasticbeanstalk-env-resources-${AWS::Region}
                  - !Sub arn:aws:s3:::elasticbeanstalk-env-resources-${AWS::Region}/*
              - Sid: AllowGeneralOperations
                Effect: Allow
                Action:
                  - cloudformation:*
                  - autoscaling:*
                  - ec2:*
                  - elasticbeanstalk:*
                  - iam:PassRole
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: "*"
              - Sid: AllowBucketAccess
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObjectAcl
                  - s3:PutObject
                  - s3:CopyObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      # ManagedPolicyArns:
      #   - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: "*"

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: NodeBuildProject
      Description: Build project for Nest.js application
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL # EC2 compute type
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        # Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        # Docker Images Provided by CodeBuild: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        EnvironmentVariables:
          - Name: NODE_ENV
            Value: development
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 22
              commands:
                - echo "Installing dependencies..."
                - npm install
            build:
              commands:
                - echo "Building application..."
                - npm run build                
                - npm ci --omit=dev
          artifacts:
            files:     
              - package.json
              - dist/**/*
              - node_modules/**/*
      TimeoutInMinutes: 10

  DeployPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: NodeDeployPipeline
      # ExecutionMode: QUEUED # QUEUED | SUPERSEDED | PARALLEL
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      # PipelineType: V1 # V1 | V2
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source # Source | Build | Test | Deploy | Invoke | Approval | Compute
                Owner: AWS # AWS | ThirdParty | Custom
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                BranchName: !Ref GitHubBranch
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub ${GitHubUser}/${RepositoryName}
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployToBeanstalk
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: 1
              Configuration:
                ApplicationName: !ImportValue BeanstalkApp-ApplicationName
                EnvironmentName: !ImportValue BeanstalkApp-EnvironmentName
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

Outputs:
  PipelineURL:
    Description: URL to access the CodePipeline console
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${DeployPipeline}/view
# Docker Images Provided by CodeBuild: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
# Lambda Compute Images: https://docs.aws.amazon.com/codebuild/latest/userguide/lambda-compute-images.html
# Get the list: aws codebuild list-curated-environment-images
