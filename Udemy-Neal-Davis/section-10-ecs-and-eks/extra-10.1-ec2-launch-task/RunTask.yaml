AWSTemplateFormatVersion: 2010-09-09

Description: Launch ECS Task (EC2) from Task Definition using Lambda-backed Custom Resource

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambdaStartEcsTaskRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: EcsTaskPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                  - ecs:DescribeTasks
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"

  RunTaskFunc:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: RunTaskFunc
      Runtime: python3.12
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Timeout: 60
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          def handler(event, context):
              ecs = boto3.client('ecs')
              response_data = {}
              try:
                if event['RequestType'] == 'Create':
                  response_data = ecs.run_task(
                    cluster=event['ResourceProperties']['Cluster'],
                    taskDefinition=event['ResourceProperties']['TaskDefinition'],
                    launchType='EC2',
                    count=1
                  )
                cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
              except Exception as e:
                cfnresponse.send(event, context, cfnresponse.FAILED, {"Error": str(e)})

  RunTaskCustomResource:
    Type: Custom::RunTask # for readability, also same as AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt RunTaskFunc.Arn
      Cluster: !ImportValue Ec2LaunchType-ClusterName
      TaskDefinition: !ImportValue Ec2LaunchType-TaskDefinitionArn
