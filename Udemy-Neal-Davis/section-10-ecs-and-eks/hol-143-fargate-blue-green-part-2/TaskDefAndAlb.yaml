AWSTemplateFormatVersion: 2010-09-09

Description: Create Task Definition and Application Load Balancer

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where the ECS cluster will be created.
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: A list of subnet IDs where the ECS instances will be launched.
  ContainerName:
    Type: String
    Description: The name of the container in the task definition.
    Default: NginxContainer

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SimpleTaskExecRole
      Description: Role for ECS Task Execustion
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: TaskExecRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowCreateLogGroup
                Effect: Allow
                Action: logs:CreateLogGroup
                Resource: "*"

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: SimpleFamily
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: "256" # Fargate CPU as from 256
      Memory: "512" # Fargate memoery as from 512
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      # TaskRoleArn: ""
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image:
            !Sub [
              "${RepositoryUri}:latest",
              { RepositoryUri: !ImportValue EcrRepository-RepositoryUri },
            ]
          Essential: true
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
              HostPort: 80

  BalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: BalancerSecGroup
      GroupDescription: Allow HTTP traffic from anywhere
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Allow HTTP traffic on port 80
          IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTP traffic on port 8080
          IpProtocol: TCP
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: SimpleBalancer
      Type: application
      Scheme: internet-facing
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref BalancerSecGroup

  TargetGroup80:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 80
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP

  TargetGroup8080:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 8080
      TargetType: ip
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP

  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup80

  Listener8080:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 8080
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup8080

Outputs:
  TaskDefinitionArn:
    Description: The ARN of the ECS Task Definition
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}-TaskDefinitionArn
  LoadBalancerUrl:
    Description: The URL of the Application Load Balancer
    Value: !Sub http://${LoadBalancer.DNSName}
    Export:
      Name: !Sub ${AWS::StackName}-LoadBalancerUrl
  BalancerSecGroupId:
    Description: The security group ID for the Application Load Balancer
    Value: !Ref BalancerSecGroup
    Export:
      Name: !Sub ${AWS::StackName}-BalancerSecGroupId
  ContainerName:
    Description: The name of the container in the task definition
    Value: !Ref ContainerName
    Export:
      Name: !Sub ${AWS::StackName}-ContainerName
  TargetGroup80Arn:
    Description: The ARN of the target group for port 80
    Value: !Ref TargetGroup80
    Export:
      Name: !Sub ${AWS::StackName}-TargetGroup80Arn
  TargetGroup8080Arn:
    Description: The ARN of the target group for port 8080
    Value: !Ref TargetGroup8080
    Export:
      Name: !Sub ${AWS::StackName}-TargetGroup8080Arn
